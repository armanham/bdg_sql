Create database TestDB;

CREATE TABLE Flights
(
    flight_number  INT PRIMARY KEY,
    origin         VARCHAR(50) NOT NULL,
    destination    VARCHAR(50) NOT NULL,
    departure_time date        NOT NULL,
    arrival_time   date        NOT NULL
);

CREATE TABLE Passengers
(
    passenger_id INT PRIMARY KEY,
    name         VARCHAR(50) NOT NULL,
    email        VARCHAR(50) NOT NULL,
    phone_number VARCHAR(20) NOT NULL
);

CREATE TABLE Bookings
(
    booking_id    INT PRIMARY KEY,
    flight_number INT   NOT NULL,
    passenger_id  INT   NOT NULL,
    booking_date  date  NOT NULL,
    cost          money NOT NULL,
    FOREIGN KEY (flight_number) REFERENCES Flights (flight_number),
    FOREIGN KEY (passenger_id) REFERENCES Passengers (passenger_id)
);


--1. Retrieve the average cost of all bookings made on the airline.
select avg(cost::numeric::integer)
from bookings;

--2. Retrieve the total number of flights that have departed from each origin airport.
select origin, count(flight_number) as flight_count
from flights
group by origin;

--3. Retrieve the total number of flights that have arrived at each destination airport.
select origin, count(flight_number) as flight_count
from flights
group by origin;

--4. Retrieve the total number of passengers who have booked flights departing from each origin airport.
select origin, count(passenger_id) as passenger_count
from bookings
         inner join Flights F on Bookings.flight_number = F.flight_number
group by origin;

--5. Retrieve the average cost of flights departing from each origin airport.
select origin, avg(cost::numeric::integer) as avg_cost_flight
from Bookings
         inner join Flights F on F.flight_number = Bookings.flight_number
group by origin;

--6. Retrieve the total number of passengers who have booked flights departing from
--each origin airport, but only for airports with an average cost per passenger of less
--than $200.
SELECT ORIGIN, COUNT(PASSENGER_ID)
FROM BOOKINGS
         INNER JOIN FLIGHTS F ON BOOKINGS.FLIGHT_NUMBER = F.FLIGHT_NUMBER
GROUP BY ORIGIN
HAVING AVG(COST::numeric::integer) < 200;

--7. Retrieve the total revenue generated by the airline, grouped by month.
select extract(month from booking_date) as month, sum(cost::numeric::integer) as sum_cost
from bookings
group by extract(month from booking_date)
order by extract(month from booking_date);

--8. Retrieve the average number of passengers per flight for each origin airport, but only
--for airports that have more than 5 departures.
SELECT ORIGIN, AVG(PASSENGER_NUMBER) as AVG_PASSENGER_PER_FLIGHT
FROM (SELECT FLIGHT_NUMBER, COUNT(PASSENGER_ID) AS PASSENGER_NUMBER
      FROM BOOKINGS
      GROUP BY FLIGHT_NUMBER) as PASSENGER_PER_FLIGHT
         INNER JOIN FLIGHTS F ON PASSENGER_PER_FLIGHT.FLIGHT_NUMBER = F.FLIGHT_NUMBER
GROUP BY ORIGIN
HAVING COUNT(ORIGIN) = 5;


--9. Retrieve the top 10 most popular destination airports, based on the total number of
--passengers who have booked flights to each destination.
select destination, count(passenger_id)
from Flights
         inner join Bookings B on Flights.flight_number = B.flight_number
group by destination
order by count(passenger_id) desc
limit 10;

--10. ???Retrieve the origin and destination airports that have the highest average cost per
--passenger, but only for flights that depart from an airport with more than 5
--departures.
